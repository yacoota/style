# \u9879\u76EEcontextPath \u79D1\u5E2E\u7F51https://blog.52itstyle.vip
# spring boot 2.x \u7684ContextPath\u914D\u7F6E\u6709\u53D8\u5316\uFF1A
server.servlet.context-path=/
# \u670D\u52A1\u7AEF\u53E3
server.port=8080
# session\u6700\u5927\u8D85\u65F6\u65F6\u95F4(\u5206\u949F)\uFF0C\u9ED8\u8BA4\u4E3A30
server.session-timeout=60
# tomcat\u6700\u5927\u7EBF\u7A0B\u6570\uFF0C\u9ED8\u8BA4\u4E3A200
server.tomcat.max-threads=100
# tomcat\u7684URI\u7F16\u7801
server.tomcat.uri-encoding=UTF-8

# \u9759\u6001\u6587\u4EF6\u8BF7\u6C42\u5339\u914D\u65B9\u5F0F
spring.mvc.static-path-pattern=/**

#spring.thymeleaf.mode=LEGACYHTML5

#spring boot 2.x  \u53C2\u6570\u53D8\u5316
spring.thymeleaf.mode=HTML
#dev tools
spring.devtools.livereload.enabled=true
spring.thymeleaf.cache=false
spring.thymeleaf.cache-period=0
spring.thymeleaf.template.cache=false
#spring.thymeleaf.prefix =  classpath:/templates
#spring.thymeleaf.suffix = .html



#\u6CE8\u610F\u4E2D\u6587\u4E71\u7801
#spring.datasource.url=jdbc:mysql://zzp52itstyle.mysql.rds.aliyuncs.com:3306/reptile_blog?characterEncoding=utf-8&useSSL=false
#spring.datasource.username=reptile
#spring.datasource.password=*******

spring.datasource.url=jdbc:mysql://127.0.0.1:3308/style?characterEncoding=utf-8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=style
spring.datasource.password=password

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#Spring Boot 2.0 includes HikariDataSource by default
spring.datasource.type = com.zaxxer.hikari.HikariDataSource

#spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.maximum-pool-size=12
#spring.datasource.hikari.auto-commit=true

# Specify the DBMS
spring.jpa.database = MYSQL
spring.jpa.open-in-view=false
# Show or not log for each sql query
spring.jpa.show-sql = true
# DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Default to "create-drop" when using an embedded database, "none" otherwise.
spring.jpa.hibernate.ddl-auto = update
# \u65B0\u7279\u6027
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl


## redis
spring.redis.database=1
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.timeout=3000ms
spring.cache.type = redis


#spring.redis.database=1
#spring.redis.host=r-m5e4873fd882de14.redis.rds.aliyuncs.com
#spring.redis.port=6379
#spring.redis.password=*******
#spring.redis.pool.max-active=8
#spring.redis.pool.max-wait=-1
#spring.redis.pool.max-idle=8
#spring.redis.pool.min-idle=0
#spring.redis.timeout=3000ms
#spring.cache.type = redis

spring.application.name=blog
spring.cloud.sentinel.transport.port=8719
spring.cloud.sentinel.transport.dashboard=localhost:8084
spring.cloud.sentinel.filter.url-patterns=*.html,*.shtml
spring.cloud.sentinel.eager=true
# nacos \u7684\u8BBF\u95EE\u5730\u5740\uFF0C\u914D\u7F6E\u53C2\u8003 https://blog.52itstyle.vip/archives/4174/
spring.cloud.sentinel.datasource.ds.nacos.server-addr=localhost:8848
#nacos\u4E2D\u5B58\u50A8\u89C4\u5219\u7684dataId,\u5BF9\u4E8EdataId\u4F7F\u7528\u4E86${spring.application.name}\u53D8\u91CF\uFF0C\u8FD9\u6837\u53EF\u4EE5\u6839\u636E\u5E94\u7528\u540D\u6765\u533A\u5206\u4E0D\u540C\u7684\u89C4\u5219\u914D\u7F6E
spring.cloud.sentinel.datasource.ds.nacos.dataId=${spring.application.name}-flow-rules
#nacos\u4E2D\u5B58\u50A8\u89C4\u5219\u7684groupId
spring.cloud.sentinel.datasource.ds.nacos.groupId=SENTINEL_GROUP
#\u5B9A\u4E49\u5B58\u50A8\u7684\u89C4\u5219\u7C7B\u578B
spring.cloud.sentinel.datasource.ds.nacos.rule-type=flow


blog.url=https://blog.52itstyle.top/